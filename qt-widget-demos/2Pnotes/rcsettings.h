/* FILE: rcsettings.h    V 0.2.2

   rcSettings contains the class to create and manage a resource file
   which includes the user settings of a program. The name of the file
   is automatically generated by the name of the application followed
   by 'rc'. It is saved in the home directory of the user.
   
   This class is written using the qt 4.4 library.
   
     Copyright (C) 2002, 2007, 2009 J. Schulze-Wenck
            message@jschulze-wenck.de

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

#ifndef _RCSETTINGS_H
#define _RCSETTINGS_H

#include <QDebug>
#include <QString>
#include <QDir>
#include <QFile>
#include <QStringList>
#include <QTextStream>
#include <QMessageBox>
#include <stdlib.h>

class rcSettings
{
public:
    rcSettings(QString nameOfApplication);

    void rcSetStrValue(QString group, QString vname, QString value);
    void rcSetNumValue(QString group, QString vname, long value);
    QString rcReadStrValue(bool* found, QString group, QString vname);
    long rcReadNumValue(bool* found, QString group, QString vname);
    bool rcdelVariable(QString group, QString vname);
    bool rcdelGroup(QString group);

private:
    QString version;
    QString filever;
    QString filename;
    QString file; //contains path and filename
    QFile f;
    QStringList l;

    QStringList::iterator findGroup(QString group);
    QStringList::iterator nextGroup(QStringList::iterator start);
    QStringList::iterator findVariableName(QString vname,QStringList::iterator start, QStringList::iterator stopp);
    void createNewList(void);
    void rcsave(void);
};

#endif









